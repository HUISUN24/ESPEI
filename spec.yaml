apiVersion: v1
kind: Service
metadata:
  name: alni-fit
  labels:
    app: espei
    role: fit
spec:
  ports:
  - port: 8786
    targetPort: 8786
    name: scheduler
  - port: 8787
    targetPort: 8787
    name: bokeh
  - port: 9786
    targetPort: 9786
    name: http
  selector:
    app: espei
    role: scheduler
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: daskd-scheduler
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: espei
        role: scheduler
    spec:
      containers:
      - name: scheduler
        image: gcr.io/espei-alni/pycalphad-fitting
        imagePullPolicy: Always
        command: ["dask-scheduler"]
        resources:
          requests:
            cpu: 1
            memory: 1000Mi
        ports:
        - containerPort: 8786
---
apiVersion: batch/v1
kind: Job
metadata:
  name: taskrunner
spec:
  template:
    metadata:
      labels:
        app: espei
        role: runner
    spec:
      containers:
      - name: runner
        image: gcr.io/espei-alni/pycalphad-fitting
        volumeMounts:
          - name: output-volume
            mountPath: /out
        imagePullPolicy: Always
        command: ["/bin/bash",
                  "-cx",
                  "env && python fit.py --dask-scheduler $ALNI_FIT_SERVICE_HOST:$ALNI_FIT_SERVICE_PORT_SCHEDULER --iter-record /out/alni.csv --output-tdb /out/alni.tdb"
                  ]
        resources:
          requests:
            cpu: 1
            memory: 1000Mi
      restartPolicy: Never
      volumes:
        - name: output-volume
          gcePersistentDisk:
            # This disk must already exist.
            pdName: output-data
            fsType: ext4
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: daskd-worker
spec:
  replicas: 4
  template:
    metadata:
      labels:
        app: espei
        role: worker
    spec:
      containers:
      - name: worker
        image: gcr.io/espei-alni/pycalphad-fitting
        imagePullPolicy: Always
        command: [
          "/bin/bash",
          "-cx",
          "env && PYTHONPATH=/work:$PYTHONPATH dask-worker $ALNI_FIT_SERVICE_HOST:$ALNI_FIT_SERVICE_PORT_SCHEDULER --nthreads 1",
        ]
---
apiVersion: batch/v2alpha1
kind: CronJob
metadata:
  name: backup
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: hello
            image: busybox
            args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
          restartPolicy: OnFailure
spec:
  template:
    metadata:
      labels:
        app: espei
        role: backup
    spec:
      containers:
      - name: backup
        image: google/cloud-sdk
        volumeMounts:
          - name: output-volume
            mountPath: /out
        imagePullPolicy: Always
        command: ["gcloud info"]
      restartPolicy: Never
      volumes:
        - name: output-volume
          gcePersistentDisk:
            # This disk must already exist.
            pdName: output-data
            fsType: ext4